// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PrebidMobileAdMobAdapters
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import GoogleMobileAds
import PrebidMobile
@_exported import PrebidMobileAdMobAdapters
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc(PrebidAdMobRewardedVideoAdapter) public class PrebidAdMobRewardedVideoAdapter : PrebidMobileAdMobAdapters.PrebidAdMobMediationBaseAdapter, GoogleMobileAds.GADMediationRewardedAd, PrebidMobile.InterstitialControllerLoadingDelegate, PrebidMobile.InterstitialControllerInteractionDelegate {
  @objc public func loadRewardedAd(for adConfiguration: GoogleMobileAds.GADMediationRewardedAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationRewardedLoadCompletionHandler)
  @objc public func present(from viewController: UIKit.UIViewController)
  @objc public func interstitialControllerDidLoadAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialController(_ interstitialController: PrebidMobile.InterstitialController, didFailWithError error: any Swift.Error)
  @objc public func trackImpression(forInterstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidClickAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidCloseAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidDisplay(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidComplete(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func viewControllerForModalPresentation(fromInterstitialController: PrebidMobile.InterstitialController) -> UIKit.UIViewController?
  @objc public func interstitialControllerDidLeaveApp(_ interstitialController: PrebidMobile.InterstitialController)
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class AdMobConstants : ObjectiveC.NSObject {
  @objc public static let PrebidAdMobEventExtrasLabel: Swift.String
  @objc public static let PrebidAdMobRewardedAdapterVersion: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class PrebidAdMobMediationBaseAdapter : ObjectiveC.NSObject, GoogleMobileAds.GADMediationAdapter {
  @objc public static func adapterVersion() -> GoogleMobileAds.GADVersionNumber
  @objc public static func adSDKVersion() -> GoogleMobileAds.GADVersionNumber
  @objc public static func networkExtrasClass() -> (any GoogleMobileAds.GADAdNetworkExtras.Type)?
  @objc required override dynamic public init()
  @objc public static func setUpWith(_ configuration: GoogleMobileAds.GADMediationServerConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationAdapterSetUpCompletionBlock)
  @objc deinit
}
@objc @objcMembers public class AdMobMediationBannerUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc final public let gadRequest: GoogleMobileAds.GADRequest
  @objc final public let bannerView: GoogleMobileAds.GADBannerView
  @objc public init(gadRequest: GoogleMobileAds.GADRequest, bannerView: GoogleMobileAds.GADBannerView)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(PrebidAdMobVideoInterstitialAdapter) public class PrebidAdMobVideoInterstitialAdapter : PrebidMobileAdMobAdapters.PrebidAdMobMediationBaseAdapter, GoogleMobileAds.GADMediationInterstitialAd, PrebidMobile.InterstitialControllerLoadingDelegate, PrebidMobile.InterstitialControllerInteractionDelegate {
  weak public var delegate: (any GoogleMobileAds.GADMediationInterstitialAdEventDelegate)?
  @objc public func loadInterstitial(for adConfiguration: GoogleMobileAds.GADMediationInterstitialAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationInterstitialLoadCompletionHandler)
  @objc public func present(from viewController: UIKit.UIViewController)
  @objc public func interstitialControllerDidLoadAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialController(_ interstitialController: PrebidMobile.InterstitialController, didFailWithError error: any Swift.Error)
  @objc public func trackImpression(forInterstitialController: PrebidMobile.InterstitialController)
  @objc public func viewControllerForModalPresentation(fromInterstitialController: PrebidMobile.InterstitialController) -> UIKit.UIViewController?
  @objc public func interstitialControllerDidClickAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidCloseAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidDisplay(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidLeaveApp(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidComplete(_ interstitialController: PrebidMobile.InterstitialController)
  @objc required dynamic public init()
  @objc deinit
}
@objc @objcMembers public class AdMobMediationNativeUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc final public let gadRequest: GoogleMobileAds.GADRequest
  @objc public init(gadRequest: GoogleMobileAds.GADRequest)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(PrebidAdMobNativeAdapter) public class PrebidAdMobNativeAdapter : PrebidMobileAdMobAdapters.PrebidAdMobMediationBaseAdapter, GoogleMobileAds.GADMediationNativeAd, PrebidMobile.NativeAdEventDelegate {
  @objc public var headline: Swift.String? {
    @objc get
  }
  @objc public var images: [GoogleMobileAds.GADNativeAdImage]?
  @objc public var body: Swift.String? {
    @objc get
  }
  @objc public var icon: GoogleMobileAds.GADNativeAdImage?
  @objc public var callToAction: Swift.String? {
    @objc get
  }
  @objc public var starRating: Foundation.NSDecimalNumber? {
    @objc get
  }
  @objc public var store: Swift.String?
  @objc public var price: Swift.String? {
    @objc get
  }
  @objc public var advertiser: Swift.String? {
    @objc get
  }
  @objc public var extraAssets: [Swift.String : Any]?
  weak public var delegate: (any GoogleMobileAds.GADMediationNativeAdEventDelegate)?
  @objc public func loadNativeAd(for adConfiguration: GoogleMobileAds.GADMediationNativeAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationNativeLoadCompletionHandler)
  @objc public func didRender(in view: UIKit.UIView, clickableAssetViews: [GoogleMobileAds.GADNativeAssetIdentifier : UIKit.UIView], nonclickableAssetViews: [GoogleMobileAds.GADNativeAssetIdentifier : UIKit.UIView], viewController: UIKit.UIViewController)
  @objc public func handlesUserClicks() -> Swift.Bool
  @objc public func handlesUserImpressions() -> Swift.Bool
  @objc public func adDidExpire(ad: PrebidMobile.NativeAd)
  @objc public func adWasClicked(ad: PrebidMobile.NativeAd)
  @objc public func adDidLogImpression(ad: PrebidMobile.NativeAd)
  @objc required dynamic public init()
  @objc deinit
}
@objc @objcMembers public class AdMobMediationRewardedUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc final public let gadRequest: GoogleMobileAds.GADRequest
  @objc public init(gadRequest: GoogleMobileAds.GADRequest)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@objc @objcMembers public class AdMobMediationInterstitialUtils : ObjectiveC.NSObject, PrebidMobile.PrebidMediationDelegate {
  @objc final public let gadRequest: GoogleMobileAds.GADRequest
  @objc public init(gadRequest: GoogleMobileAds.GADRequest)
  @objc public func setUpAdObject(with values: [Swift.String : Any]) -> Swift.Bool
  @objc public func cleanUpAdObject()
  @objc public func getAdView() -> UIKit.UIView?
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(PrebidAdMobInterstitialAdapter) public class PrebidAdMobInterstitialAdapter : PrebidMobileAdMobAdapters.PrebidAdMobMediationBaseAdapter, GoogleMobileAds.GADMediationInterstitialAd, PrebidMobile.InterstitialControllerLoadingDelegate, PrebidMobile.InterstitialControllerInteractionDelegate {
  weak public var delegate: (any GoogleMobileAds.GADMediationInterstitialAdEventDelegate)?
  @objc public func loadInterstitial(for adConfiguration: GoogleMobileAds.GADMediationInterstitialAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationInterstitialLoadCompletionHandler)
  @objc public func present(from viewController: UIKit.UIViewController)
  @objc public func interstitialControllerDidLoadAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialController(_ interstitialController: PrebidMobile.InterstitialController, didFailWithError error: any Swift.Error)
  @objc public func trackImpression(forInterstitialController: PrebidMobile.InterstitialController)
  @objc public func viewControllerForModalPresentation(fromInterstitialController: PrebidMobile.InterstitialController) -> UIKit.UIViewController?
  @objc public func interstitialControllerDidClickAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidCloseAd(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidDisplay(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidComplete(_ interstitialController: PrebidMobile.InterstitialController)
  @objc public func interstitialControllerDidLeaveApp(_ interstitialController: PrebidMobile.InterstitialController)
  @objc required dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class AdMobUtils : ObjectiveC.NSObject {
  @objc public static func initializeGAD()
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(PrebidAdMobBannerAdapter) public class PrebidAdMobBannerAdapter : PrebidMobileAdMobAdapters.PrebidAdMobMediationBaseAdapter, GoogleMobileAds.GADMediationBannerAd, PrebidMobile.DisplayViewLoadingDelegate, PrebidMobile.DisplayViewInteractionDelegate {
  @objc public var view: UIKit.UIView {
    @objc get
  }
  @objc public func loadBanner(for adConfiguration: GoogleMobileAds.GADMediationBannerAdConfiguration, completionHandler: @escaping GoogleMobileAds.GADMediationBannerLoadCompletionHandler)
  @objc public func displayViewDidLoadAd(_ displayView: PrebidMobile.PBMDisplayView)
  @objc public func displayView(_ displayView: PrebidMobile.PBMDisplayView, didFailWithError error: any Swift.Error)
  @objc public func trackImpression(forDisplayView: PrebidMobile.PBMDisplayView)
  @objc public func viewControllerForModalPresentation(fromDisplayView: PrebidMobile.PBMDisplayView) -> UIKit.UIViewController?
  @objc public func didLeaveApp(from displayView: PrebidMobile.PBMDisplayView)
  @objc public func willPresentModal(from displayView: PrebidMobile.PBMDisplayView)
  @objc public func didDismissModal(from displayView: PrebidMobile.PBMDisplayView)
  @objc required dynamic public init()
  @objc deinit
}
