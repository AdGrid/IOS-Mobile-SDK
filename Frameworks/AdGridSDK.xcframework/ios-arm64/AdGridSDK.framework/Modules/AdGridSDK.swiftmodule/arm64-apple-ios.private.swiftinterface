// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AdGridSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import AdGridSDK
import DTBiOSSDK
import Foundation
import GoogleMobileAds
import PrebidMobile
import PrebidMobileGAMEventHandlers
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_hasMissingDesignatedInitializers @objcMembers public class AdManagerSupport : ObjectiveC.NSObject, GoogleMobileAds.GADBannerViewDelegate, GoogleMobileAds.GADFullScreenContentDelegate, GoogleMobileAds.GADAdSizeDelegate {
  @objc public func adView(_ bannerView: GoogleMobileAds.GADBannerView, willChangeAdSizeTo size: GoogleMobileAds.GADAdSize)
  @objc deinit
}
@objc @objcMembers public class AdGridSdk : ObjectiveC.NSObject {
  @objc public static var sharedLogger: (_ logObj: ObjectiveC.NSObject?) -> ()
  @objc public static func sharedInstance() -> AdGridSDK.AdGridSdk?
  @objc public var googleAdManagerOriginalApiSupport: AdGridSDK.AdManagerOriginalApiSupport {
    @objc get
  }
  @objc public init(accountId: Swift.String, initialGADTestDeviceIds: Swift.Array<Swift.String>? = nil, _ completion: PrebidMobile.PrebidInitializationCallback? = nil, amazonAppId: Swift.String? = nil)
  @objc deinit
}
public enum AdFormat : Swift.CustomStringConvertible, Swift.CaseIterable {
  case displayBanner
  public var description: Swift.String {
    get
  }
  public static func == (a: AdGridSDK.AdFormat, b: AdGridSDK.AdFormat) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public typealias AllCases = [AdGridSDK.AdFormat]
  public static var allCases: [AdGridSDK.AdFormat] {
    get
  }
  public var hashValue: Swift.Int {
    get
  }
}
extension AdGridSDK.AdManagerOriginalApiSupport {
  @objc dynamic public func displayAdView(on viewController: UIKit.UIViewController, adUnitId: Swift.String, amazonAdId: Swift.String? = nil, prebidConfigId: Swift.String, bannerView: UIKit.UIView, adSize: CoreFoundation.CGSize, kvps: Swift.Dictionary<Swift.String, Swift.String>? = nil, adRefreshRateInMillis: Swift.Double = 30_000, loadAdCompletion: AdGridSDK.LoadAdCompletionCallback? = nil, adSizeResolvedCallback: AdGridSDK.AdSizeResolvedCallback? = nil)
  @objc dynamic public func displayAdView(on viewController: UIKit.UIViewController, dataPosition: Swift.String, bannerView: UIKit.UIView, loadAdCompletion: AdGridSDK.LoadAdCompletionCallback? = nil, adSizeResolvedCallback: AdGridSDK.AdSizeResolvedCallback? = nil)
  @objc dynamic public func bannerViewDidReceiveAd(_ bannerView: GoogleMobileAds.GADBannerView)
  @objc dynamic public func bannerView(_ bannerView: GoogleMobileAds.GADBannerView, didFailToReceiveAdWithError error: any Swift.Error)
}
@objc @_Concurrency.MainActor(unsafe) public class AdGridView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) public init(adGridSdk: AdGridSDK.AdGridSdk?, adFormat: AdGridSDK.AdFormat = AdFormat.displayBanner, adUnitId: Swift.String, amazonAdId: Swift.String? = nil, prebidConfigId: Swift.String, adSize: CoreFoundation.CGSize, additionalSizes: [CoreFoundation.CGSize]? = nil, kvps: Swift.Dictionary<Swift.String, Swift.String>? = nil, adRefreshRateInMillis: Swift.Double = 30_000, loadAdCompletion: AdGridSDK.LoadAdCompletionCallback? = nil, adSizeResolvedCallback: AdGridSDK.AdSizeResolvedCallback? = nil) throws
  @_Concurrency.MainActor(unsafe) public init(dataPosition: Swift.String) throws
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @objc deinit
}
public typealias LoadAdCompletionCallback = (_ result: PrebidMobile.ResultCode) -> Swift.Void
public typealias AdSizeResolvedCallback = (CoreFoundation.CGSize) -> Swift.Void
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class AdManagerOriginalApiSupport : AdGridSDK.AdManagerSupport {
  @objc deinit
}
extension AdGridSDK.AdFormat : Swift.Equatable {}
extension AdGridSDK.AdFormat : Swift.Hashable {}
